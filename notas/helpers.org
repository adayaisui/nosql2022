#+TITLE: Helpers to startup Databases
#+AUTHOR: Prof. Miguel Angel Escalante Serrato
#+EMAIL:  miguel.escalante@itam.mx

* Mongo
~DHC~ es la variable que tiene el hash del contenedor, es importante tenerlo a la mano para correr cosas como ~mongoimport~ o el ~mongosh~
** Inicio de Mongo

#+begin_src shell
  docker volume create mongo-data #crea el volumen mongo-data para poder guardar datos ahí y usar datos de ese volumen
  docker stop mongo #detiene mongo
  docker rm mongo #borra el contenedor mongo
  # cd carpeta de sus datos
  export EX_DIR=`pwd`/mongodb-sample-dataset #lo exporta sample-dataset
  echo $EX_DIR #lo imprime
  mkdir -p $DATA_DIR #hace un directorio
  docker run -p 27017:27017 \ #corre un writeable container en el puerto 27017
         -v mongo-data:/data/db \ #la dirección donde están los datos que quieres usar en el volumen
         -v $EX_DIR:/mongodb-sample-dataset \ #lo de arriba pero para sample-datset
         --name mongo \
         -d mongo
#+end_src

#+RESULTS:
| mongo-data                                                                |
| /Users/miguelescalante/github/ITAM/nosql2022/notas/mongodb-sample-dataset |
| 34b0f02a8ada13f08c1ad9c93243b83b17314a94b735a1bd0314dc684b49ffad          |

** Correr el shell de mongo
#+begin_src shell
  docker exec -it mongo mongosh
#+end_src
** Correr un mongoimport
#+begin_src shell
  cat data/pk.json | docker exec -i mongo  mongoimport --db=pkdx --collection=pk
#+end_src

** Conexión con python a la bd
#+begin_src python
import requests
import pymongo

url = "https://pokeapi.co/api/v2/pokemon/1"

response = requests.request("GET", url)

myclient = pymongo.MongoClient("mongodb://0.0.0.0:27017/") # similar a ejecutar mongosh
mydb = myclient["pokemon"] # == use pokemon
mycol = mydb["pokedex"] # == db.pokedex.....
pokemons = response.json()
x = mycol.insert_many(pokemons) # find({"iniciativas:{$exists:true}"})
#+end_src

* Monet DB

#+begin_src shell
  #  docker volume remove monet-data
  docker volume create monet-data
  docker stop monetdb
  docker rm monetdb
  docker run \
         -v $PWD/data:/tmp/new \
         -v monet-data:/var/monetdb5/dbfarm \
         -p 50001:50000 \
         --name monetdb \
         -d monetdb/monetdb:latest
#+end_src

#+RESULTS:
| monet-data                                                       |
| monetdb                                                          |
| monetdb                                                          |
| 555c2177d4f7b674a1db0f456afb55c35ed1172e08153ef44729b0ecda95ff0d |

#+begin_src shell
docker exec -it monetdb mclient -u ecobici -d ecobici
#+end_src
* PostgreSQL
#+begin_src shell
  docker volume create postgresql-data
  docker stop postgres
  docker rm postgres
  docker run -p 5432:5432 \
         -v postgresql-data:/var/lib/postgresql/data \
         -e POSTGRES_PASSWORD=postgres \
         --name postgres \
         -d postgres
#+end_src

#+RESULTS:
| postgresql-data                                                  |
| postgres                                                         |
| postgres                                                         |
| 3794bfb5ca535f63911fe446b38cdc6a92228aa11849f91d12cb4101fb53a942 |

#+begin_src shell
  docker exec -it postgres psql -d postgres -Upostgres
#+end_src
